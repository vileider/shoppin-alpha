[{"C:\\testy-react\\shoppin-alpha\\src\\index.js":"1","C:\\testy-react\\shoppin-alpha\\src\\components\\bottom-links.js":"2","C:\\testy-react\\shoppin-alpha\\src\\App.js":"3","C:\\testy-react\\shoppin-alpha\\src\\components\\dinner.js":"4","C:\\testy-react\\shoppin-alpha\\src\\reportWebVitals.js":"5","C:\\testy-react\\shoppin-alpha\\src\\components\\PickingPanel.js":"6","C:\\testy-react\\shoppin-alpha\\src\\components\\basket.js":"7","C:\\testy-react\\shoppin-alpha\\src\\components\\GenerateSetOfItems.js":"8","C:\\testy-react\\shoppin-alpha\\src\\components\\ModBar.js":"9","C:\\testy-react\\shoppin-alpha\\src\\components\\modBarSeverCommunication\\AddItem.js":"10","C:\\testy-react\\shoppin-alpha\\src\\components\\modBarSeverCommunication\\AddDinner.js":"11"},{"size":500,"mtime":1607431996065,"results":"12","hashOfConfig":"13"},{"size":262,"mtime":1615298672283,"results":"14","hashOfConfig":"13"},{"size":299,"mtime":1614763701470,"results":"15","hashOfConfig":"13"},{"size":4579,"mtime":1615817697522,"results":"16","hashOfConfig":"13"},{"size":362,"mtime":1603804872000,"results":"17","hashOfConfig":"13"},{"size":7821,"mtime":1616511164495,"results":"18","hashOfConfig":"13"},{"size":2096,"mtime":1616061144556,"results":"19","hashOfConfig":"13"},{"size":3713,"mtime":1615645985222,"results":"20","hashOfConfig":"13"},{"size":1191,"mtime":1616586137038,"results":"21","hashOfConfig":"13"},{"size":3907,"mtime":1616551471150,"results":"22","hashOfConfig":"13"},{"size":93,"mtime":1616586192749,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1f65v13",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\testy-react\\shoppin-alpha\\src\\index.js",[],["48","49"],"C:\\testy-react\\shoppin-alpha\\src\\components\\bottom-links.js",[],"C:\\testy-react\\shoppin-alpha\\src\\App.js",[],"C:\\testy-react\\shoppin-alpha\\src\\components\\dinner.js",[],"C:\\testy-react\\shoppin-alpha\\src\\reportWebVitals.js",[],"C:\\testy-react\\shoppin-alpha\\src\\components\\PickingPanel.js",[],"C:\\testy-react\\shoppin-alpha\\src\\components\\basket.js",[],"C:\\testy-react\\shoppin-alpha\\src\\components\\GenerateSetOfItems.js",[],"C:\\testy-react\\shoppin-alpha\\src\\components\\ModBar.js",[],"C:\\testy-react\\shoppin-alpha\\src\\components\\modBarSeverCommunication\\AddItem.js",["50"],"import React, { useState } from 'react';\r\n\r\nexport const AddItem = function () {\r\n    const [itemMenuState, setItemMenuState] = useState({\r\n        productName: '',\r\n        productCategory: '',\r\n        productPrice: ''\r\n    })\r\n    const [infoMessage, SetInfoMessage] = useState('please fill all fields')\r\n    const itemMenuStateChange = (name, catgory, price) => {\r\n        let itemMenu = {\r\n            productName: name, productCategory: catgory, productPrice: price\r\n        }\r\n        setItemMenuState(itemMenu)\r\n    }\r\n    const addItemToDatabase = async () => {\r\n        SetInfoMessage('sending to server')\r\n        const fetchTask = new Request('http://localhost:8000/addItem',\r\n            {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(itemMenuState)\r\n            });\r\n        await fetch(fetchTask)\r\n            .then(data => console.log('sending data', data))\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    const typedDataValidation = () => {\r\n        (itemMenuState.productName === '' ||\r\n            itemMenuState.productCategory === '' ||\r\n            itemMenuState.productPrice === '')\r\n            ? SetInfoMessage('all fields required')\r\n            : addItemToDatabase()\r\n\r\n    }\r\n\r\n    const addItemMenu = (\r\n        <>\r\n            <div className='addItemMenu'>\r\n                <div className='nameOfAddedProduct'>\r\n                    <div className='settingsTitle'>Product Name:</div>\r\n                    <input type='text' maxLength={16} onChange={(e) => {\r\n                        itemMenuStateChange(e.target.value,\r\n                            itemMenuState.productCategory,\r\n                            itemMenuState.productPrice)\r\n                    }} />\r\n                </div>\r\n\r\n                <div className='categoryOfAddedProduct'>\r\n                    <div className='settingsTitle'>Category:</div>\r\n                    <div onChange={(e) => {\r\n                        itemMenuStateChange(itemMenuState.productName,\r\n                            e.target.value,\r\n                            itemMenuState.productPrice)\r\n                    }}><label>\r\n                            <input type='radio' value='/vegAndFruit' onChange={e => { }}\r\n                                checked={itemMenuState.productCategory === '/vegAndFruit'} />Veg and Fruits</label>\r\n                        <label><input type='radio' value='/chemicals' onChange={e => { }}\r\n                            checked={itemMenuState.productCategory === '/chemicals'} />Chemicals</label>\r\n                        <label><input type='radio' value='/dairyWheatAndEggs' onChange={e => { }}\r\n                            checked={itemMenuState.productCategory === '/dairyWheatAndEggs'} />Dairy</label>\r\n                        <label><input type='radio' value='/everythingElse' onChange={e => { }}\r\n                            checked={itemMenuState.productCategory === '/everythingElse'} />Everything else</label>\r\n                    </div>\r\n\r\n                    <div className='priceOfAddedProduct'>\r\n                        <div className='settingsTitle'>Price:</div>\r\n                        <input type='text' maxLength={2} size='1' onChange={(e) => {\r\n                            itemMenuStateChange(itemMenuState.productName,\r\n                                itemMenuState.productCategory,\r\n                                e.target.value)\r\n                        }} />\r\n                    </div>\r\n\r\n                </div >\r\n                {(infoMessage != 'sending to server') &&\r\n                    <button onTouchStart={() => typedDataValidation()}>ADD</button>}\r\n\r\n            </div>\r\n            <div className='infoPanel'>{infoMessage}</div>\r\n        </>\r\n    )\r\n    return addItemMenu\r\n}","C:\\testy-react\\shoppin-alpha\\src\\components\\modBarSeverCommunication\\AddDinner.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":81,"column":31,"nodeType":"57","messageId":"58","endLine":81,"endColumn":33},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]